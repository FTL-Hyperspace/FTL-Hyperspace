"f30f1107f30f114f04c3":
cleanup __amd64 void Pointf::constructor(Pointf* this, float _x, float _y);
"660fd64424f0488b4424f0f30f1007":
cleanup __amd64 float Pointf::RelativeDistance(Pointf* this, Pointf other);
"4883ec28f30f100ff30f104704":
cleanup __amd64 Pointf Pointf::Normalize(Pointf* this);


struct Pointf
{{
	Pointf()
	{

	}

	Pointf(float x, float y)
	{
		this->x = x;
		this->y = y;
	}
	
	Pointf operator+(const Pointf& other)
	{
		return Pointf(x + other.x, y + other.y);
	}
	
	Pointf operator-(const Pointf& other)
	{		
		return Pointf(x - other.x, y - other.y);
	}
	
	Pointf operator/(float amount)
	{		
		return Pointf(x / amount, y / amount);
	}
	
	Pointf operator*(float amount)
	{		
		return Pointf(x*  amount, y*  amount);
	}
}};
