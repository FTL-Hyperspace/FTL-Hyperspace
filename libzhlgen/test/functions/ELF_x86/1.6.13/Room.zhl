"56538b74240c0fb64c24108b4634":
cleanup __cdecl int Room::GetEmptySlots(Room *this, bool intruder);
".56538b44240c0fb64c2410":
cleanup __cdecl bool Room::Full(Room *this, bool intruder);
".555756538b5424188b4c241484d2":
cleanup __cdecl int Room::GetEmptySlot(Room *this, bool intruder);
".56538b5c240c0fb64424148b4c2410":
noHook __cdecl void Room::DO_NOT_HOOK();
".56538b5c240c0fb64424148b4c2410":
cleanup __cdecl void Room::FillSlot(Room *this, int slot, bool intruder);
"5589e557565381ec2c0100008b45088b5508c7400400000000":
cleanup __cdecl void Room::constructor(Room *this, int iShipId, int x, int y, int w, int h, int roomId);
"83ec3c8b4c2440f30f1005????????f30f100d????????":
cleanup __cdecl void Room::OnRenderFloor(Room *this, float alpha, bool experimental);
"5383ec188b5c2420f30f104c2424807b4000":
cleanup __cdecl void Room::OnRenderWalls(Room *this, float alpha);
"5557565383ec4c8b442460c700????????c74008????????8b407c890424":
cleanup __cdecl void Room::destructor(Room *this);


struct Room depends (Globals, Point) {{
	Point GetIntoRoom(Point pos)
	{
		int posX = pos.x;
		int posY = pos.y;
		
		int rectY = this->rect.y;
		int rectH = this->rect.h;
		
		int rectX = this->rect.x;
		int rectW = this->rect.w;
		
		//printf("%d %d %d %d %d %d\n", posX, posY, rectX, rectW, rectY, rectH);
		
		if (rectY + rectH - posY > 15 && posY - rectY > 15)
		{
			if (rectW + rectX - posX > 15 && posX - rectX > 15)
			{
				return Point(-1, -1);
			}
		}
		
		
		
		
		Point center = Point(rectX + rectW / 2, rectY + rectH / 2);
		
		Point toGrid = Point((posX + 2 * (center.x > posX) - 1) / 35, (posY + 2 * (center.y > posY) - 1) / 35);
		Point fromGrid = Point(toGrid.x * 35, toGrid.y * 35);
		
		return Point(fromGrid.x + 17, fromGrid.y + 17);
	}

	Globals::Rect GetRect() 
	{
		return this->rect;
	}
}};
