"578d7c240883e4f0ff77fc5589e557565389ce83c17083ec6c8b1fc7419c00000000":
int ShipManager::constructor(ShipManager *this<ecx>, int shipId);
"578d7c240883e4f0ff77fc5589f889e557565389cf8d8d90feffff81ec????????":
void ShipManager::AddInitialCrew(ShipManager *this<ecx>, std::vector<CrewBlueprint>& blueprints);
"578d7c240883e4f0ff77fc5589e557565383ec2c8bb1c8040000837e04ff74??c70424????????89cb":
int ShipManager::GetDodgeFactor(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589f889e557565389cf81ec????????803d??????????8b188b4004889d44ffffff898530ffffff0f84????????":
void ShipManager::OnRender(ShipManager *this<ecx>, char showInterior, char doorControlMode);
"5589e557565383e4f083ec100fb645088b51648844240f8b416829d0c1f80285c00f84????????":
int ShipManager::CountCrew(ShipManager *this<ecx>, char boarders);
"578d7c240883e4f0ff77fc5589f889e557565383ec3c8b3f8b70040fb64008":
static void ShipManager::TeleportCrew(std::vector<CrewMember*>& crewList<ecx>, ShipManager *ship, int roomId, bool intruders);
"578d7c240883e4f0ff77fc5589fa89e55756538d99e0040000":
int ShipManager::OnInit(ShipManager *this<ecx>, ShipBlueprint *bp, int shipLevel);
"8b44240483f81174??8b91c8040000833c82ff0f95c0c204008db42600000000b8????????":
char ShipManager::HasSystem(ShipManager *this<ecx>, int systemId);
"8b51188b411c29d0c1f80285c074??5589e557565389ce31db83e4f0eb??66908b41383b450874??8b461c83c301":
ShipSystem *ShipManager::GetSystemInRoom(ShipManager *this<ecx>, int roomId);
"578d7c240883e4f0ff77fc5589e557565389ce8d8d1cffffff81ec????????":
void ShipManager::OnLoop(ShipManager* this<ecx>);
"578d7c240883e4f0ff77fc5589e55783ec148b078b7f0483f81174??83f8ff74??8b91c8040000":
void ShipManager::SetSystemPowerLoss(ShipManager *this<ecx>, int systemId, int powerLoss);
"578d7c240883e4f0ff77fc5589e557565389cb83ec4c8b810807000085c0":
int ShipManager::CreateSystems(ShipManager *this<ecx>);
"8b810807000085c00f84????????578d7c240883e4f0ff77fc5589e557568db104070000":
int ShipManager::AddSystem(ShipManager *this<ecx>, int systemId);
"578d7c240883e4f0ff77fc5589e557565331db89cf81ec????????8b5118":
void ShipManager::UpdateCrewMembers(ShipManager *this<ecx>);
"578d41708d7c240883e4f0ff77fc5589e557565389cf89c1":
void ShipManager::UpdateEnvironment(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589e557565389ce8d4d9c81ec????????8b0789c389458c8b47048945908b4708":
CrewMember *ShipManager::AddCrewMemberFromBlueprint(ShipManager *this<ecx>, CrewBlueprint* bp, int slot, bool init, int roomId, bool intruder);
"578d7c240883e4f0ff77fc5589e557565389cb81ec????????8b078b770c8b490489855cfdffff89b570fdffff8b47048b771085c9898568fdffff89b558fdffff":
CrewMember *ShipManager::AddCrewMemberFromString(ShipManager *this<ecx>, const std::string& name, const std::string& race, char intruder, int roomId, char init, char male);
"8b81c8040000837808ff74??55660fefc989e583e4f083ec208b4124f30f1005????????f30f5980d0010000f30f5ac8f20f110c24e8????????dd5c2418f20f2c442418":
int ShipManager::GetOxygenPercentage(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589f889e557565383ec2c807832008b1f8b7f2875??3b7b04":
char ShipManager::DamageCrew(ShipManager *this<ecx>, CrewMember *crew, DamageParameter dmg);
"578d7c240883e4f0ff77fc5589e55756538d45d889cb83ec5c8b378945d0894dac":
void ShipManager::RemoveItem(ShipManager *this<ecx>, const std::string& name); 
"578d7c240883e4f0ff77fc5589e557565389ce81ec????????8b47088b5f3cf30f105704f30f100f8945908b4710f30f118d78fffffff30f119574ffffff":
bool ShipManager::DamageArea(ShipManager *this<ecx>, Pointf location, DamageParameter dmg, bool forceHit);
"578d7c240883e4f0ff77fc5589e557565381eccc0000008b07807910008b570889459c8b47048945988b470c":
bool ShipManager::DamageBeam(ShipManager *this<ecx>, Pointf location1, Pointf location2, DamageParameter dmg);
"578d7c240883e4f0ff77fc5589e557565383ec5c8b47048b7708894da883f8ff":
static CrewBlueprint* ShipManager::SelectRandomCrew(CrewBlueprint& bp<ecx>, ShipManager *ship, int seed, const std::string& unk);
"5589e5565331db89ce83e4f083ec108b51188b411c29d0c1f80285c074??66908b0c9a":
void ShipManager::ClearStatusAll(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589e557565389ce83ec7c8b816c0800003b81700800000f84????????8b0d????????ba????????83f90274??83f901":
void ShipManager::PrepareSuperDrones(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589e557565389ce83ec3c83a994040000018b51188b8194040000c681d80400000185c0":
void ShipManager::JumpLeave(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589e557565389cb83ec4c8b378b470485f6":
void ShipManager::ModifyScrapCount(ShipManager *this<ecx>, int scrap, bool income);
"578d7c240883e4f0ff77fc5589e55783ec148b81c80400008b1783780cff75300191040800008b7dfc8b810408000085c0b800000000":
void ShipManager::ModifyMissileCount(ShipManager *this<ecx>, int missiles);
"578d7c240883e4f0ff77fc5589e55783ec148b81c80400008b17837810ff75300191000800008b7dfc8b8100080000":
void ShipManager::ModifyDroneCount(ShipManager *this<ecx>, int drones);
"578d7c240883e4f0ff77fc5589e557565383ec1c8b81c80400008b3f8b701c83feff74??":
bool ShipManager::DoSensorsProvide(ShipManager *this<ecx>, int vision);
"5731c08d7c240883e4f0ff77fc5589e5575389cb83ec108b5104b9????????85d20f95c0890424e8????????83ec04837b0401b9????????19d2":
bool ShipManager::IsCrewFull(ShipManager *this<ecx>);
"5731c08d7c240883e4f0ff77fc5589e5575389cb83ec108b5104b9????????85d20f95c0890424e8????????83ec04837b040119d283e2fe":
bool ShipManager::IsCrewOverFull(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589e557565389cb83ec2c8b178b82b800000083f8020f84????????83f8030f85????????89542404":
CrewDrone *ShipManager::CreateCrewDrone(ShipManager *this<ecx>, const DroneBlueprint *bp);
"578d7c240883e4f0ff77fc5589e557565383ec3c8b3fc745dc0000000083bfb8000000070f87????????8b87b800000089cbff2485????????8db42600000000e8????????c70424????????8945d4":
SpaceDrone *ShipManager::CreateSpaceDrone(ShipManager *this<ecx>, const DroneBlueprint *bp);
"578d7c240883e4f0ff77fc5589e55783ec148b47048b0fc744240800000000c7442404ffffffff890424":
bool ShipManager::CommandCrewMoveRoom(ShipManager *this<ecx>, CrewMember *crew, int roomId);
"55b8????????89e5538b550883e4f083faff74??8b99c80400008b149383faff74??8b49188b0c9185c9":
int ShipManager::GetSystemRoom(ShipManager *this<ecx>, int sysId);
"578d7c240883e4f0ff77fc5589e5575389cb83ec108b078b90c8040000837a0cff75??c701????????c741040000000089d8c7410800000000":
static std::vector<ProjectileFactory*>& ShipManager::GetWeaponList(std::vector<ProjectileFactory*> &wepList<ecx>, ShipManager *ship);
"578d7c240883e4f0ff77fc5589e557565383ec1c8b81c80400008b1f8b7704837810ff":
Drone* ShipManager::AddDrone(ShipManager *this<ecx>, const DroneBlueprint *bp, int slot);
"578d7c240883e4f0ff77fc5589e557565389cf83ec4c8b410485c075??c641100189f9e8????????8b8fc00400008b97bc04000089c8":
void ShipManager::Restart(ShipManager *this<ecx>);
"558b81c804000089e583e4f08b55088b049083f8ff74??8b51188b0c82e8????????":
int ShipManager::GetSystemPower(ShipManager *this<ecx>, int systemId);
"5589e557565383e4f083ec108b41688b51648944240c29d0c1f80285c074??894c240431db31ffeb??8db4260000000001c78b44240c":
int ShipManager::CountCrewShipId(ShipManager *this<ecx>, int roomId, int shipId);
"8b44240483f8ff74??8b91c80400008b048283f8ff74??8b51188b0482":
ShipSystem* ShipManager::GetSystem(ShipManager *this<ecx>, int systemId);
"5789c805????????8d7c240883e4f0ff77fc5589e557565381ec????????8b3789cf89442404898d90feffff893424e8????????80bf68060000008d85c0feffff89c1898594feffff":
void ShipManager::ExportShip(ShipManager *this<ecx>, int file);
".578d7c240883e4f0ff77fc5589e557565389ce":
void ShipManager::destructor(ShipManager *this<ecx>);
".5589e55389cb83e4f083ec10e8????????891c24e8????????8b5dfc":
void ShipManager::destructor2(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589e55756538d85dcfcffff89ce8d9de4fcffff81ec????????8b3f898d4cfbffff890424897c2404e8????????":
void ShipManager::ImportShip(ShipManager *this<ecx>, int file);
"578d7c240883e4f0ff77fc5589e557565389cb83ec5c8b81c8040000c645b7008b701c83feff74??":
void ShipManager::CheckVision(ShipManager *this<ecx>);
"5383ec048b54240c83fa1174??8b99c804000031c0833c93ff75??83c4045bc20400891424e8????????83ec04":
int ShipManager::IsSystemHacked(ShipManager *this<ecx>, int systemId);
"578d7c240883e4f0ff77fc5589e557565383ec4c8b078b51648945d48b47048945d00fb64708":
CrewMember* ShipManager::GetSelectedCrewPoint(ShipManager *this<ecx>, int x, int y, bool intruder);
"578d7c240883e4f0ff77fc5589e5578db994000000565389ce89f983ec5ce8????????8945c08b86c8040000":
void ShipManager::RenderWeapons(ShipManager *this<ecx>);
"5589e583e4f083ec108b450883f81174??83f8ff74??8b91c80400008b048283f8ff74??8b51188b0c8285c974??e8????????c9":
void ShipManager::ClearStatusSystem(ShipManager *this<ecx>, int system);
"a1????????c781d40400001e00000083f80174??83f80274??f3c3908d742600c781d404000000000000c3908d742600c781d40400000a000000":
void ShipManager::ResetScrapLevel(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589e557565389ce81c1????????83ec3c8b411cc741ec000000008941208b812cfcffff89810c040000c70424????????":
void ShipManager::JumpArrive(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589e557565383ec4c8b51188b411cc745b80000000029d0c1f80285c00f84????????89cf":
void ShipManager::CheckSpreadDamage(ShipManager *this<ecx>);
"5731c08d7c240883e4f0ff77fc5589e55783ec148b1783faff74??8bb9c80400008b149783faff74??8b4918":
bool ShipManager::ForceDecreaseSystemPower(ShipManager *this<ecx>, int sys);
"5589c889e58b55088b524485d274??8b8aec0100005d89088b8af00100008948048b8af40100008b92f801000089480889500c":
static void ShipManager::GetShieldPower(ShieldPower &power<ecx>, ShipManager *ship);
"5731c08d7c240883e4f0ff77fc5589e5575383ec108b91c80400008b1f8b7f04837a0cff74??8b4948":
int ShipManager::AddWeapon(ShipManager *this<ecx>, const WeaponBlueprint* bp, int slot);
"578d7c240883e4f0ff77fc5589e557565383ec4c8b3f8b178b470429d0c1f80369c0????????85c00f84????????":
void ShipManager::AddEquipmentFromList(ShipManager *this<ecx>, std::vector<std::string> equipmentList);
"8b410485c075??c3908db4260000000080b9b00400000075??80b9990400000074??f3c38b915408000085d2":
void ShipManager::RenderChargeBars(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589f889e557565389cf83ec3c8b188b81c8040000837810ff0f84????????8b414c":
void ShipManager::ExportBattleState(ShipManager *this<ecx>, int file);
"578d7c240883e4f0ff77fc5589e557565389cb83ec3c8b81c80400008b37837810ff0f84????????8b414c8d4ddc05????????":
void ShipManager::ImportBattleState(ShipManager *this<ecx>, int file);
"558b81c804000089e583e4f08b55088b149031c083faff74??8b41188b0c908b01ff502c":
bool ShipManager::SystemFunctions(ShipManager *this<ecx>, int systemId);
"5589e557565383e4f083ec108b450883f8050f84????????83f80d74??8b791c8b511889f829d0":
bool ShipManager::CanFitSystem(ShipManager *this<ecx>, int systemId);
"5589e557565383e4f083ec108b791c8b511889f829d0c1f80285c074??894c240c31db31f6eb??":
cleanup bool ShipManager::CanFitSubsystem(ShipManager *this<ecx>, int systemId);
"578d7c240883e4f0ff77fc5589e557565389cb83ec2c8b018b378b57048b40403d????????75??0fb681d804000038d0":
int ShipManager::DamageHull(ShipManager *this<ecx>, int dmg, bool force);
"578d7c240883e4f0ff77fc5589f889e557565383ec6c8b308b58048b4018897db089cf":
void ShipManager::DamageSystem(ShipManager *this<ecx>, int systemId, DamageParameter damage);
"5783c1708d7c240883e4f0ff77fc5589e55783ec148b07c744240402000000890424e8????????8b7dfc83ec08c9":
void ShipManager::StartFire(ShipManager *this<ecx>, int roomId);
"57b9????????8d7c240883e4f0ff77fc5589e557565383ec4c8b07c745dc00000000c744240800000000c744240400000000c745e000000000c745e4000000008945c489c38d45dc890424":
CrewMember* ShipManager::FindCrew(ShipManager *this<ecx>, const CrewBlueprint *bp);
"8079100075??b8????????c38d742600578d7c240883e4f0ff77fc5589e5575653":
bool ShipManager::GetDodged(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589e55756538d995c08000081ec8c0000008b8188040000894db4c745a007000000895d9485c00f842a030000908db42600000000":
void ShipManager::PrepareSuperBarrage(ShipManager *this<ecx>);
"57b9????????8d7c240883e4f0ff77fc5589e55756538d45ac31db83ec6cc745ac00000000c745b000000000890424c744240400000000c745b400000000":
bool ShipManager::RestoreCrewPositions(ShipManager *this<ecx>);
"5589e557565383e4f083ec108b79688b4164c744240c0000000089fa29c2c1fa0285d274??31db894c2408eb??8d760089fa83c301":
CrewMember* ShipManager::GetCrewmember(ShipManager *this<ecx>, int slot, bool present);
"5589e55383e4f083ec108b550883fa11744e8b81c80400008b1c9031c083fbff750e8b5dfcc9c20800":
int ShipManager::CanUpgrade(ShipManager *this<ecx>, int systemId, int amount);
"578d7c240883e4f0ff77fc5589e557565389cb83c10483ec6c8b078b7704":
static ShipBlueprint* ShipManager::SaveToBlueprint(ShipBlueprint &bp<ecx>, ShipManager *ship, bool unk);
"578d7c240883e4f0ff77fc5589e55756538d5dd089ce83ec7c8b078b570489d9":
void ShipManager::CheckCrystalAugment(ShipManager *this<ecx>, Pointf pos);

struct ShipManager depends (PowerManager, ShieldPower)
{{
	ShipManager(int shipId) 
	{
		this->constructor(shipId);
	}
	
	Pointf GetRandomRoomCenter()
	{
		auto rng = rand();
		auto graph = ShipGraph::GetShipInfo(this->iShipId);
		auto rooms = graph->rooms.size();
		return this->ship.GetRoomCenter(rng % rooms);
	}
	
	Pointf GetRoomCenter(int roomId)
	{
		return ship.GetRoomCenter(roomId);
	}
	
	std::vector<ProjectileFactory*> GetWeaponList()
	{
		std::vector<ProjectileFactory*> vec = std::vector<ProjectileFactory*>();
		ShipManager::GetWeaponList(vec, this);
		return vec;
	}
	
	~ShipManager()
	{
		this->destructor2();
	}
	
	std::pair<int, int> GetAvailablePower()
	{
		PowerManager *powerMan = PowerManager::GetPowerManager(iShipId);
		
		return std::pair<int, int>(powerMan->currentPower.second, powerMan->currentPower.second - powerMan->currentPower.first);
	}
	
	ShieldPower GetShieldPower()
	{
		ShieldPower shieldPower;
		GetShieldPower(shieldPower, this);
		return shieldPower;
	}
	

}};