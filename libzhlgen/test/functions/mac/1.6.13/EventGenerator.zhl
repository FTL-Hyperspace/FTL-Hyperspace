"554889e5415741564155415453504989d74889f34989fe48":
cleanup __amd64 std::string EventGenerator::GetImageFromList(EventGenerator *this, const std::string& listName);
"554889e54157415653504989d74889f34989fe4881c35801":
cleanup __amd64 ShipEvent EventGenerator::GetShipEvent(EventGenerator *this, const std::string& event);
"554889e54157415641554154534883ec58894dac":
cleanup __amd64 SectorDescription EventGenerator::GetSectorDescription(EventGenerator *this, const std::string& type, int level);
"554889e541574156534883ec184889d3":
cleanup __amd64 SectorDescription EventGenerator::GetSpecificSector(EventGenerator *this, const std::string& name);
"NOT FOUND IN SIGNATURE DATA":
cleanup __amd64 LocationEvent *EventGenerator::CreateEvent(EventGenerator *this, const std::string& name, int worldLevel, bool ignoreUnique);
"NOT FOUND IN SIGNATURE DATA":
cleanup __amd64 LocationEvent *EventGenerator::GetBaseEvent(EventGenerator *this, const std::string& name, int worldLevel, char ignoreUnique, int seed);

"UNKNOWN FUNCTION DEFENITION":
EventGenerator* Global_EventGenerator_Generator;


struct EventGenerator depends (SectorDescription, Sector, LocationEvent)
{{
    SectorDescription GetSectorDescriptionCustom(const std::string& type, int level);

	void ClearUsedEvent(const std::string& name)
	{
		auto it = usedEvents.find(name);
		if (it != usedEvents.end())
		{
			events[name] = it->second;
			usedEvents.erase(it);
		}
	}
	
	void ClearUsedEvent(LocationEvent *locEvent)
	{
		if (locEvent)
		{
			ClearUsedEvent(locEvent->eventName);
			for (auto& choice : locEvent->choices)
			{
				ClearUsedEvent(choice.event);
			}
		}
	}
}};
