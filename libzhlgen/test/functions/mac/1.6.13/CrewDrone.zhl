"UNKNOWN FUNCTION DEFENITION":
virtual cleanup __amd64 void CrewDrone::OnLoop(CrewDrone *this);
"NOT FOUND IN SIGNATURE DATA":
cleanup __amd64 void CrewDrone::constructor(CrewDrone *this, const std::string& type, const std::string& name, int shipId, const DroneBlueprint* blueprint, CrewAnimation *anim);
"UNKNOWN FUNCTION DEFENITION":
virtual cleanup __amd64 bool CrewDrone::ProvidesVision(CrewDrone *this);
"NOT FOUND IN SIGNATURE DATA":
cleanup __amd64 void CrewDrone::destructor(CrewDrone *this);
"554889e589b7ac01":
cleanup __amd64 void CrewDrone::SetCurrentShip(CrewDrone *this, int shipId);


struct CrewDrone depends (CrewMember, DroneBlueprint)
{{
	virtual ~CrewDrone()
	{
		this->destructor();
	}

	CrewDrone()
	{
	}

	CrewDrone(const std::string& type, const std::string& name, int shipId, const DroneBlueprint* blueprint, CrewAnimation *anim)
	{
		this->constructor(type, name, shipId, blueprint, anim);
	}

	inline std::string& GetRace();

	bool _HS_ValidTarget(int shipId);
	bool _HS_GetControllable();
	bool _HS_CanFight();
	bool _HS_CanRepair();
	bool _HS_CanSabotage();
	bool _HS_CanMan();
	bool _HS_CanSuffocate();
	bool _HS_CanBurn();
	float _HS_GetMoveSpeedMultiplier();
	float _HS_GetRepairSpeed();
	int _HS_GetMaxHealth();
	float _HS_GetDamageMultiplier();
	bool _HS_ProvidesPower();
	float _HS_GetFireRepairMultiplier();
	bool _HS_IsTelepathic();
	float _HS_GetSuffocationModifier();
	bool _HS_IsAnaerobic();
	int _HS_BlockRoom();

}};
