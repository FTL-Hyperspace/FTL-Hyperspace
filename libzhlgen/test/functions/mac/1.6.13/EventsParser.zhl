"!31c0e8??????00488d3d(???????\?)e8????1a00":
offsetVariable EventsParser* Global_EventsParser_Parser;

".554889e54157415641554154534883ec4848897d98488d3d":
cleanup __amd64 void EventsParser::AddAllEvents(EventsParser* this);
"!.554889e54157415641554154534881ecf8000100":
cleanup __amd64 void EventsParser::AddEvents(EventsParser* this, EventGenerator& generator, char* file, const std::string& fileName);
"!.554889e54157415641554154534881ec2802000048899578":
cleanup __amd64 void EventsParser::ProcessBaseNode(EventsParser* this, rapidxml::xml_node<char>* node, EventGenerator& generator);
"!.554889e54157415641554154534881ec98030000":
cleanup __amd64 std::string EventsParser::ProcessEvent(EventsParser* this, rapidxml::xml_node<char>* node, const std::string& eventName);
"!.554889e54157415641554154534883ec384989ce4989f749":
cleanup __amd64 std::vector<std::string> EventsParser::ProcessEventList(EventsParser* this, rapidxml::xml_node<char>* node, const std::string& listName);
"!.554889e54157415641554154534881ec480600004989d648":
cleanup __amd64 ShipTemplate EventsParser::ProcessShipEvent(EventsParser* this, rapidxml::xml_node<char>* node);
"!.554889e54157415641554154534883ec684989d5":
cleanup __amd64 RandomAmount EventsParser::PullMinMax(EventsParser* this, rapidxml::xml_node<char>* node, const std::string& name);
"!.554889e54157415641554154534881ecb80000004989cf48":
cleanup __amd64 ResourcesTemplate EventsParser::ProcessModifyItem(EventsParser* this, ResourcesTemplate& resources, rapidxml::xml_node<char>* node, const std::string& origin);


struct EventsParser
{{
	static bool ParseBoolean(const std::string& str)
	{
		return str == "true" || str == "TRUE" || str == "True";
	}
}};
