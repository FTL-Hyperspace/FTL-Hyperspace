"554889e54157415641545389f34989fe":
cleanup __amd64 bool ShipSystem::ForceDecreasePower(ShipSystem *this, int powerLoss);
"554889e58b47648b8f840100":
cleanup __amd64 void ShipSystem::AddDamage(ShipSystem *this, int amount);
"554889e58b87ac01000085c07f0e83f8":
cleanup __amd64 bool ShipSystem::Ioned(ShipSystem *this, int num);
"NOT FOUND IN SIGNATURE DATA":
cleanup __amd64 void ShipSystem::destructor(ShipSystem *this);
"554889e54156534189f64889fb8bb3a0":
cleanup __amd64 void ShipSystem::SaveState(ShipSystem *this, int file);
"554889e541565389f34989fe89dfe8????f5ff41":
cleanup __amd64 void ShipSystem::LoadState(ShipSystem *this, int file);
"554889e531c0837f58007e1b":
cleanup __amd64 int ShipSystem::GetEffectivePower(ShipSystem *this);
"80bf9c01":
cleanup __amd64 void ShipSystem::SetBonusPower(ShipSystem *this, int amount, int permanentPower);
"554889e58b8fa001":
cleanup __amd64 int ShipSystem::GetPowerCap(ShipSystem *this);
"554889e54156534889fb4084f674238b":
cleanup __amd64 bool ShipSystem::BlockedBoosted(ShipSystem *this, bool countLimit);
"554889e58b4f5885":
cleanup __amd64 int ShipSystem::IsMannedBoost(ShipSystem *this);
"554889e58b8fac01":
cleanup __amd64 bool ShipSystem::GetLocked(ShipSystem *this);
"COULD NOT FIND UNIQUE SIGNATURE":
cleanup __amd64 void ShipSystem::StopHacking(ShipSystem *this);
"554889e54156534189f64889fb488b03ff502044":
cleanup __amd64 bool ShipSystem::UpgradeSystem(ShipSystem *this, int amount);
"554889e58b47648b8fa00100":
cleanup __amd64 int ShipSystem::GetMaxPower(ShipSystem *this);
"554889e5415741564154534889fb80bb":
cleanup __amd64 void ShipSystem::CheckMaxPower(ShipSystem *this);
"554889e583c7fa83":
static cleanup __amd64 bool ShipSystem::IsSubsystem(int systemType);
"554889e54157415641554154534881ecb80000004589cd4c":
cleanup __amd64 int ShipSystem::RenderPowerBoxes(ShipSystem *this, int x, int y, int width, int height, int gap, int heightMod, bool flash);
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__glowWhite;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__lockBlue;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__fireImage;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__lockHack;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__manningBarIon;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__manningBarOff;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__lockWhite;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__sabotageImage;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__manningOutline;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__manningBarOn;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__manningWhite;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__manningGreen;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__manningYellow;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__glowBlue;
"UNKNOWN FUNCTION DEFENITION":
offsetVariable GL_Primitive** ShipSystem__glowRed;
"554889e54156534189d64889fb8b8bac":
cleanup __amd64 bool ShipSystem::IncreasePower(ShipSystem *this, int amount, bool force);
"554889e54156534189f64889fb80bb9c":
cleanup __amd64 bool ShipSystem::DecreasePower(ShipSystem *this, bool force);
"554889e54156534883ec10f30f1145ec":
cleanup __amd64 bool ShipSystem::DamageOverTime(ShipSystem *this, float unk);
"554889e54156534889fb8b435083c0fd":
cleanup __amd64 void ShipSystem::CheckForRepower(ShipSystem *this);
"554889e585f6741a":
cleanup __amd64 void ShipSystem::LockSystem(ShipSystem *this, int lock);
"554889e583bfa001":
cleanup __amd64 void ShipSystem::ClearStatus(ShipSystem *this);
"554889e553504889fb89b3a0":
cleanup __amd64 void ShipSystem::SetPowerCap(ShipSystem *this, int cap);
"554889e553504889fb89b3a4":
cleanup __amd64 int ShipSystem::SetPowerLoss(ShipSystem *this, int power);
"554889e54156534883ec104189f64889fb8b8384":
cleanup __amd64 bool ShipSystem::PartialRepair(ShipSystem *this, float speed, bool autoRepair);
"554889e58b87ac01000085c07e0983bf":
cleanup __amd64 void ShipSystem::AddLock(ShipSystem *this, int lock);
"554889e54157415653504989ff4183bf":
cleanup __amd64 void ShipSystem::OnLoop(ShipSystem *this);
"554889e553504889fb488d35????0d00e8????0b":
static cleanup __amd64 int ShipSystem::NameToSystemId(const std::string& name);
"554889e583fe110f":
static cleanup __amd64 std::string ShipSystem::SystemIdToName(int systemId);
"554889e54157415641554154534881ec9800000089d34989":
static cleanup __amd64 std::string ShipSystem::GetLevelDescription(int systemId, int level, bool tooltip);
"NOT FOUND IN SIGNATURE DATA":
cleanup __amd64 void ShipSystem::constructor(ShipSystem *this, int systemId, int roomId, int shipId, int startingPower);

"COULD NOT FIND UNIQUE SIGNATURE":
cleanup __amd64 bool ShipSystem::PartialDamage(ShipSystem *this, float amount); /* Thunk of ShipSystem::DamageOverTime, maybe it can be used instead? */


struct ShipSystem
{{
	ShipSystem() { }
	
	ShipSystem(int systemId, int roomId, int shipId, int startingPower)
	{
		this->constructor(systemId, roomId, shipId, startingPower);
	}
}};
