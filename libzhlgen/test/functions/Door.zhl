"578d7c240883e4f0ff77fc5589e557565389cb83ec1c80791800c641200075??":
void Door::FakeClose(Door *this<ecx>);
"8b913c0200008b410485d27e??85c00f94c00fb6c08b511c85d274??80791800":
bool Door::IsSealed(Door *this<ecx>, int shipId);
"578d7c240883e4f0ff77fc5589e557565389cb83ec1c83b9b400000004":
void Door::FakeOpen(Door *this<ecx>);
"578d7c240883e4f0ff77fc5589e557565389cb83ec1c0fb6411883f00184c088411875??8079200074??83bbb40000000474??":
void Door::Manipulate(Door *this<ecx>);

struct Door depends (Point, ShipGraph)
{{
public:
	Point GetCenterPoint()
	{
		Point ret = Point(this->x, this->y);
		return ret;
	}
	Point GetEntryWay(int room)
	{
		Point pos1 = Point(this->x, this->y);
		Point pos2;

		if (this->bVertical)
		{
			pos2 = Point(pos1.x + 17, pos1.y);
			pos1 = Point(this->x - 17, pos1.y);
		}
		else
		{
			pos2 = Point(this->x, pos1.y + 17);
			pos1 = Point(this->x, this->y - 18);
		}

		auto shipInfo = ShipGraph::GetShipInfo(this->iShipId);

		if (room == shipInfo->GetSelectedRoom(pos2.x, pos2.y, false))
		{
			return pos2;
		}
		else
		{
			return pos1;
		}
	}
}};