"578d7c240883e4f0ff77fc5589e557565383ec2c8b41048b57048b378b5f08":
int Ship::GetSelectedRoomId(Ship *this<ecx>, int x, int y, bool unk);
"578d7c240883e4f0ff77fc5589e557565389cb81ec????????8b078b570889c68985d0feffff8b47048995ccfeffff8985c8feffff8b4104890424":
void Ship::LockdownRoom(Ship *this<ecx>, int roomId, Pointf pos);
"538b81bc0300008b89c00300008b5c240829c1c1f90469c9????????85c974??3b98ec00000074??05????????31d2eb??05????????3b9810ffffff":
bool Ship::RoomLocked(Ship *this<ecx>, int roomId);
"578d7c240883e4f0ff77fc5589e557565383ec1c8b59088b410c8b178b770429d8":
bool Ship::FullRoom(Ship *this<ecx>, int roomId, bool intruder);
"578d7c240883e4f0ff77fc5589f889e557565389cf83ec1c8b008b51088b0c828d1c85????????8b5134":
int Ship::EmptySlots(Ship *this<ecx>, int roomId);
"578d7c240883e4f0ff77fc5589e55783ec148b178b41088b0c900fb64704":
int Ship::GetAvailableRoomSlot(Ship *this<ecx>, int roomId, bool intruder);
"8b51208b412429d0c1f80285c074??5589e557565389ce31db83e4f0eb??66908b462483c301":
void Ship::OnRenderBreaches(Ship *this<ecx>);
"578d7c240883e4f0ff77fc5589e557565389cb83ec4c0fb6078b770431ff8845cc8b410c2b4108c1f80285c075??e9????????8b43088b0cb8f30f110424":
void Ship::OnRenderWalls(Ship *this<ecx>, bool forceView, bool doorControlMode);
"57b8????????8d7c240883e4f0ff77fc5589e5575653e8????????29c48b0789cb8db5a4fffeff898544fefeffa1????????85c00f84????????8b3d????????85ff":
void Ship::OnInit(Ship *this<ecx>, ShipBlueprint& bp);
"8b51088b410c29d0c1f80285c074??5589e5565389ce31db83e4f0908d7426008b0c9a83c301":
void Ship::OnRenderSparks(Ship *this<ecx>);
"578d7c240883e4f0ff77fc5589e55783ec148b178b41088b0c900fb64704890424e8????????8b7dfc":
void Ship::SetRoomBlackout(Ship *this<ecx>, int roomId, bool blackout);
"578d7c240883e4f0ff77fc5589f889e557565389cf83ec5c8b008945d08b4104890424e8????????":
void Ship::OnRenderBase(Ship *this<ecx>, bool unk);
"578d7c240883e4f0ff77fc5589f889e557565389cf83ec2c80b9b803000000":
void Ship::OnRenderFloor(Ship *this<ecx>, bool unk);
"578d7c240883e4f0ff77fc5589e557565389cb83ec5c8b4104f30f1027f30f1165d4890424":
void Ship::OnRenderJump(Ship *this<ecx>, float progress);
"578d7c240883e4f0ff77fc5589e557565389ce83ec2c8b1f8b83f401000089018b83f80100008941048b83fc0100008941088b830002000089410c":
static void Ship::GetBaseEllipse(Globals::Ellipse& ret<ecx>, Ship *_this);
"578d7c240883e4f0ff77fc5589e557565383ec2c8b378b790c8b4108894de489fa29c2c1fa02":
void Ship::SetSelectedRoom(Ship *this<ecx>, int roomId);
"578d7c240883e4f0ff77fc5589e557568db19c0300005381ec????????894dac8b1f89cf89f1e8????????80bfae0300000074??c70424????????":
void Ship::OnLoop(Ship *this<ecx>, std::vector<float>& oxygenLevels);
"578d7c240883e4f0ff77fc5589e557565383ec5c8b51208b41248b3fc745c400000000c745c800000000c745cc0000000029d0":
void Ship::BreachRandomHull(Ship *this<ecx>, int roomId);

struct Ship depends (ShipGraph, Globals::Ellipse) {{
	Pointf GetRoomCenter(int room)
	{
		auto graph = ShipGraph::GetShipInfo(this->iShipId);
		return graph->GetRoomCenter(room);
	}
	
	enum DoorStateType
	{
	  DOOR_CLOSED = 0x0,
	  DOOR_OPEN = 0x1,
	  DOOR_OPEN_FORCED = 0x2,
	  DOOR_HIT = 0x3,
	  DOOR_ANIMATING = 0x4,
	};

	Globals::Ellipse GetBaseEllipse()
	{
		Globals::Ellipse ellipse;
		GetBaseEllipse(ellipse, this);
		return ellipse; 
	}
}};