"5589e58b45088b550c5d89415c895160c208008d":
void StarMap::SetPosition(StarMap *this<ecx>, Point unk0);
".80b91007000000741a5653837c240c31741e837c":
void StarMap::KeyDown(StarMap *this<ecx>, int unk0);
".56538b999804000085db78??83fb0119d283e2e083c24083fb0119c0":
int StarMap::GetNextDangerMove(StarMap *this<ecx>);
".80790400740ac389f68dbc2700000000578d7c24":
void StarMap::Open(StarMap *this<ecx>);
".80b9c0060000000f85b6000000578d7c240883e4":
void StarMap::Close(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e557565389cb83":
void StarMap::SetOpen(StarMap *this<ecx>, bool unk0);
".578d7c240883e4f0ff77fc5589e557565389ce8d":
void StarMap::InitMapTitle(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e557565389cb8d":
void StarMap::InitNoFuelText(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e557565389cb83":
void StarMap::InitBossMessageBox(StarMap *this<ecx>);
".5589e55389cb83e4f0e812f7ffff89d9e8ebfaff":
void StarMap::OnLanguageChange(StarMap *this<ecx>);
".5589e583e4f0803d????????007435e8a46e1500":
int StarMap::GetRandomSectorChoice(StarMap *this<ecx>);
".565331c08b5c240c85db78438bb1fc0600008b91":
void StarMap::NeighboringSector(StarMap *this<ecx>, int unk0);
".578d7c240883e4f0ff77fc5589fa89e557565389":
void StarMap::GetSelectedSector(StarMap *this<ecx>, int unk0, int unk1, int unk2);
".578d7c240883e4f0ff77fc5589e55756538d75d0":
void StarMap::StartSecretSector(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e557565383ec6c":
void StarMap::ReachSector(StarMap *this<ecx>, Sector * unk0);
".578d7c240883e4f0ff77fc5589f889e557565389":
void StarMap::UpdateSectorMap(StarMap *this<ecx>, Sector * unk0);
".578d7c240883e4f0ff77fc5589f889e557565389":
void StarMap::SaveGame(StarMap *this<ecx>, int file);
".f3c38db426000000008dbc2700000000f3c38db4":
void StarMap::InitStatistics(StarMap *this<ecx>);
".f3c38db426000000008dbc2700000000f3c38db4":
void StarMap::PrintStatistics(StarMap *this<ecx>);
".f3c38db426000000008dbc27000000008b442404":
void StarMap::AnalyzeMap(StarMap *this<ecx>);
".8b442404018198040000c2040090669031c083b9":
void StarMap::ModifyPursuit(StarMap *this<ecx>, int unk0);
".31c083b9800000003b7f4656538b999804000085":
void StarMap::AtBeacon(StarMap *this<ecx>);
".80797c00741a80b9ac060000007411c6417c00c6":
void StarMap::GetWaitLocation(StarMap *this<ecx>);
".8b919004000031c085d27e04c38d760056538b71":
void StarMap::StartBeacon(StarMap *this<ecx>);
".538b4424088b5c240c8b48088b500c29cac1fa02":
void StarMap::LocationsConnected(StarMap *this<ecx>, Location * unk0, Location * unk1);
".578d7c240883e4f0ff77fc5589e5578d4df083ec":
void StarMap::PointToGrid(StarMap *this<ecx>, float unk0, float unk1);
".538b44240880787c008941507404c6407c008b58":
void StarMap::TravelToLocation(StarMap *this<ecx>, Location * unk0);
".8b4150c6401401c3908db42600000000f3c38db4":
void StarMap::ForceExitBeacon(StarMap *this<ecx>);
".f3c38db426000000008dbc2700000000568b9174":
void StarMap::OnRenderFogEffect(StarMap *this<ecx>);
".568b917408000031c0538b99680800008b74240c":
void StarMap::LocationHasBoss(StarMap *this<ecx>, Location * unk0);
".56538b54240c8b422085c074258b801c06000085":
void StarMap::LocationHasStore(StarMap *this<ecx>, Location * unk0);
".8b4424048b402085c074070fb6401cc2040031c0":
void StarMap::LocationHasShip(StarMap *this<ecx>, Location * unk0);
".8b819004000083c00183f8038981900400007f01":
void StarMap::AdvanceWorldLevel(StarMap *this<ecx>);
".568b8174080000538b997808000080b170080000":
void StarMap::ReverseBossPath(StarMap *this<ecx>);
".80b97008000000c6817108000001751a8b817808":
void StarMap::ForceBossJump(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e557565331db89":
void StarMap::ClearBoss(StarMap *this<ecx>);
".8b4424048981e4090000c2040090669031c083b9":
void StarMap::SetBossStage(StarMap *this<ecx>, int stage);
".31c083b96c080000047405f3c38d76008b817408":
void StarMap::CheckGameOver(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e557565389cf81":
void StarMap::RenderLabels(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e557565389ce83ec2c8b81d80900008b99dc09000039d8":
void StarMap::DeleteMap(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e557565389cb83":
void StarMap::MouseClick(StarMap *this<ecx>, int unk0, int unk1);
".578d7c240883e4f0ff77fc5589e557565389cebb":
void StarMap::AddSectorColumn(StarMap *this<ecx>);
".5589e557565389cf83e4f083ec208b81fc060000":
void StarMap::PushSectorColumn(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589f889e557565389":
void StarMap::SelectNewSector(StarMap *this<ecx>, int unk0);
".578d7c240883e4f0ff77fc5589e557565389cb81":
void StarMap::GenerateSectorMap(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e557565389cb8d":
void StarMap::constructor(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e55756538d85d0":
void StarMap::RenderSectorName(StarMap *this<ecx>, Sector * unk0, GL_Color unk1);
".578d7c240883e4f0ff77fc5589e557565389cb83ec4c80b9c0060000000f85????????80b980080000000f85????????8bb38000000083fe3b0f8f????????89d9e8????????01f083f83b898380000000":
void StarMap::UpdateDangerZone(StarMap *this<ecx>);
".31c080797c00747880b9ac06000000755c5589e5":
Location* StarMap::GetNewLocation(StarMap *this<ecx>);
".80790400750ac389f68dbc2700000000578d7c24":
void StarMap::OnLoop(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e557565381ec????????8b81a00600008b919c0600008b37898de8feffff898504ffffff29d0c1f802":
void StarMap::GenerateEvents(StarMap *this<ecx>, bool tutorial);
".578d7c240883e4f0ff77fc5589e557565383ec2c":
void StarMap::AddConnections(StarMap *this<ecx>, Location * unk0);
".578d810c0a00008d7c240883e4f0ff77fc5589e5":
void StarMap::MapConnected(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e5575653":
void StarMap::ConnectLocations(StarMap *this<ecx>, Point unk0, Point unk1);
".5789c883c02c8d7c240883e4f0ff77fc5589e5575653":
void StarMap::PopulateGrid(StarMap *this<ecx>, Point unk0);
".578d7c240883e4f0ff77fc5589e557565383ec4c8b07":
Location *StarMap::PopClosestLoc(StarMap *this<ecx>, std::vector<Location*>& vec, std::map<Location*, int>& map);
".578d7c240883e4f0ff77fc5589e55756538d45a431f681ec????????89bd70ffffff":
static void StarMap::Dijkstra0(std::vector<Location*>& ref<ecx>, StarMap *starMap, Location * start, Location * finish);
".578d7c240883e4f0ff77fc5589f889e557565389cf83ec5c8b100fb64004":
bool StarMap::AddQuest(StarMap *this<ecx>, const std::string& questEvent, bool force);
".578d7c240883e4f0ff77fc5589e557565381ec????????":
Location* StarMap::GenerateMap(StarMap *this<ecx>, bool tutorial, bool seed);
".578d7c240883e4f0ff77fc5589e557565389ce83":
Location* StarMap::NewGame(StarMap *this<ecx>, bool unk0);
".578d7c240883e4f0ff77fc5589f889e557565381":
static void StarMap::Dijkstra1(std::vector<Location*>& ref<ecx>, StarMap *starMap, Location * start, Location * finish, bool include_unknown);
".578d7c240883e4f0ff77fc5589e557565381ec8c":
void StarMap::MouseMove(StarMap *this<ecx>, int x, int y);
".578d7c240883e4f0ff77fc5589e557565389ce81":
void StarMap::OnTouch(StarMap *this<ecx>, TouchAction unk0, int unk1, int unk2, int unk3, int unk4, int unk5);
".578d7c240883e4f0ff77fc5589f889e557565389":
Location* StarMap::LoadGame(StarMap *this<ecx>, int fileHelper);
".578d7c240883e4f0ff77fc5589e557565389cb83":
void StarMap::RenderLeftInsetButton(StarMap *this<ecx>, float unk0, float unk1, bool unk2);
".578d7c240883e4f0ff77fc5589e55756538d7dc8":
void StarMap::RenderDistressButtons(StarMap *this<ecx>);
".578d7c240883e4f0ff77fc5589e557565389cb81ec????????80b91007000000":
void StarMap::OnRender(StarMap *this<ecx>);
"578d7c240883e4f0ff77fc5589e557565381ec????????8b078b57048b5f08894db889458089d689957cffffff8b5004":
void StarMap::DrawConnection(StarMap *this<ecx>, const Pointf& pos1, const Pointf& pos2, const GL_Color* color);
"578d7c240883e4f0ff77fc5589e557565383ec4c8b1f8b4320c6431c01c6839c00000000":
void StarMap::TurnIntoFleetLocation(StarMap *this<ecx>, Location *loc);
"578d41088d7c240883e4f0ff77fc5589e557565389ce83ec7c8b1f8d7dd08901":
static std::string& StarMap::GetLocationText(std::string& strRef<ecx>, StarMap *starMap, const Location* loc);
"578d7c240883e4f0ff77fc5589e557565389cb81ec????????833fff8b77040f84????????8b81ac090000c68543ffffff00803d??????????c683c8090000018983ac090000":
void StarMap::SetupNoFuel(StarMap *this<ecx>, int seed, const std::string& forceEscape);
"578d7c240883e4f0ff77fc5589e557565381ec????????8b0789c78945888b40048b17":
void StarMap::GenerateNebulas(StarMap *this<ecx>, const std::vector<std::string>& names);
"578d7c240883e4f0ff77fc5589e557565389ce83ec3c8b81680800008b91740800008b3c82":
void StarMap::UpdateBoss(StarMap *this<ecx>);

struct StarMap
{{
	
}};