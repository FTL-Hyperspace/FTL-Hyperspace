"578d7c240883e4f0ff77fc5589e557565383ec4c8b4704894dc48b1f8945bc8b47088945c08b470c83f8ff74??803d??????????8904240f85????????e8????????8b7dc48d4f60c6876c01000001c6876d01000000891c24":
LocationEvent *EventGenerator::GetBaseEvent(EventGenerator *this<ecx>, const std::string& name, int worldLevel, char ignoreUnique, int seed);
"578d7c240883e4f0ff77fc5589e557565381ec????????8b5f048b37898dc4fcffff899dbcfcffff8b5f088d7944899dacfcffff89342489f9e8????????83ec04":
LocationEvent *EventGenerator::CreateEvent1(EventGenerator *this<ecx>, const std::string& name, int worldLevel);
"578d7c240883e4f0ff77fc5589e557565389ce81ec????????8b078b7f04c744240807690fc789c389851cffffff83c00c":
static Sector *EventGenerator::GetSpecificSector(SectorDescription *desc<ecx>, EventGenerator *eventGenerator, const std::string& name);
"578d7c240883e4f0ff77fc5589e557565389ce83ec2c8b1f8b7f0481c3????????893c2489d9":
static void EventGenerator::GetImageFromList(std::string& ret<ecx>, EventGenerator *eventGenerator, const std::string& listName);
"5789c883c0488d7c240883e4f0ff77fc5589e557565389ce81ec8c0000008b57088b1f894140894d9cc70100000000c74104000000008955a089ca":
static SectorDescription *EventGenerator::GetSectorDescription(SectorDescription *desc<ecx>, EventGenerator *eventGenerator, const std::string& type, int level);

struct EventGenerator depends (SectorDescription, Sector, LocationEvent)
{{
	SectorDescription *GetSpecificSector(const std::string& name)
	{
		SectorDescription *desc = new SectorDescription();
		EventGenerator::GetSpecificSector(desc, this, name);
		
		return desc;
	}
	
	std::string GetImageFromList(const std::string& listName)
	{
		std::string ret = std::string();
		
		GetImageFromList(ret, this, listName);
		
		return ret;
	}
	
	void ClearUsedEvent(const std::string& name)
	{
		auto it = usedEvents.find(name);
		if (it != usedEvents.end())
		{
			events[name] = it->second;
			usedEvents.erase(it);
		}
	}
	
	void ClearUsedEvent(LocationEvent *locEvent)
	{
		if (locEvent)
		{
			ClearUsedEvent(locEvent->eventName);
			for (auto& choice : locEvent->choices)
			{
				ClearUsedEvent(choice.event);
			}
		}
	}
}};